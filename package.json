{
  "name": "lazy-rest",
  "version": "0.4.3",
  "description": "Create a simple REST API using just your folder structure to create endpoints",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/lellimecnar/lazy-rest.git"
  },
  "keywords": [
    "rest",
    "api",
    "endpoint"
  ],
  "author": {
    "name": "Lance Miller"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lellimecnar/lazy-rest/issues"
  },
  "homepage": "https://github.com/lellimecnar/lazy-rest/wiki",
  "dependencies": {
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "^1.12.4",
    "change-case": "^2.3.0",
    "express": "^4.12.4",
    "glob": "^5.0.6",
    "lodash": "^3.9.1",
    "mongoose": "^4.0.3",
    "mongoose-api-query": "^0.1.1-pre",
    "oauth2orize": "^1.0.1",
    "passport": "^0.2.2",
    "passport-http": "^0.2.2",
    "passport-http-bearer": "^1.0.1",
    "random-ext": "^2.5.1",
    "replace-ext": "0.0.1"
  },
  "readme": "# lazy-rest\n\nCreate a simple REST API using just your folder structure to create endpoints.\n\n### `lazyRest(app, [db])([apiRoot, opts])`\n\n### Arguments\n\n| argument  | description                                              |\n|-----------|----------------------------------------------------------|\n| `app`     | Your Express app                                         |\n| `db`      | Your Mongoose database                                   |\n| `apiRoot` | A path to prefix to your endpoints. Defaults to `'/api'` |\n| `opts`    | Optional configuration object. See below.                |\n\n### Available options\n\n| option        | type     | default   | description                                                                                         |\n|---------------|----------|-----------|-----------------------------------------------------------------------------------------------------|\n| `root`        | `String` | `\"./api\"` | The relative path for lazy-rest to look for endpoints.                                              |\n| `dbRoot`      | `String` | `\"./db\"`  | The relative path for lazy-rest to look for Mongoose configuration.                                 |\n| `paramPrefix` | `String` | `\":\"`     | The character to precede named parameters in folder names. Useful when `:` is an illegal character. |\n\n## Usage\n\n```js\nvar express = require('express'),\n\tapp = express(),\n\tmongoose = require('mongoose'),\n\tdb = mongoose.connect('mongodb://localhost:27017/my-sweet-db'),\n\tlazyRest = require('lazy-rest')(app, db);\n\napp.use(lazyRest('/api/v1', {\n\troot: './relative/path/to/api/files',\n\tdbRoot: './relative/path/to/db/files',\n\tparamPrefix: '$'\n}));\n\napp.listen(8080);\n```\n\nThe example above will:\n\n1. Search for endpoint files in `opt.root`\n1. Create Express routes based on the files found\n\t1. Route URIs are created from the paths, with `apiRoot` prepended (defaults to `\"/api\"`)\n\t1. HTTP methods are determined from the filenames\n\t1. The function exported by each file is passed to Express as that route's controller\n1. Search for js files in `opt.dbRoot` called `schema.js`\n\t1. The path of each file is converted, using PascalCase into a model name\n\t1. The object exported by `schema.js` is used to create the schema definition for the model\n1. Search directories called `params` for js files\n\t1. The model name is converted from the parent directory to match the schema from above\n\t1. The filenames of each js file is used as the parameter key\n\t1. The function exported for each key is run whenever an endpoint containing that named parameter is requested\n\n### Example\n\n###### `get.js`\n```js\nmodule.exports = function(req, res, next) {\n\tres.json({msg: 'This endpoint works!!!'});\n};\n```\n\n###### `schema.js`\n```js\nmodule.exports = {\n\tfirstName: String,\n\tlastname: String,\n\tdob: Date,\n\temail: String\n};\n```\n\n###### `params/specialId.js`\n```js\nmodule.exports = function(req, res, next, val, model) {\n\tmodel.findById(val, function(err, item) {\n\t\tif (!err) {\n\t\t\treq.specialResult = item;\n\t\t}\n\t\tnext();\n\t});\n};\n```\n\n## Automatic Endpoint Creation\n\nIf a Mongoose db connection is supplied, lazy-rest will automatically create some basic CRUD endpoints for each collection, as well as their cooresponding id parameter keys. These can easily be overridden by supplying the matching files.\n\nRemember: the collection name is the pluralized version of the model name, so a file at `./db/author/schema.js` will result in a collection called `authors`, and endpoints at `/api/authors/...`.\n\nHere are the endpoints which are automatically created for each collection:\n\n* `GET /api/<collection>` Returns a list of all documents.\n* `GET /api/<collection>/:authorId` Returns a single document.\n* `POST /api/<collection>` Creates a new document.\n* `PUT /api/<collection>/:authorId` Updates an existing document.\n* `DELETE /api/<collection>/:authorId` Deletes an existing document.\n\n#### Available HTTP Methods\n\n* `checkout`\n* `connect`\n* `copy`\n* `delete`\n* `get`\n* `head`\n* `lock`\n* `merge`\n* `mkactivity`\n* `mkcol`\n* `move`\n* `m-search`\n* `notify`\n* `options`\n* `patch`\n* `post`\n* `propfind`\n* `proppatch`\n* `purge`\n* `put`\n* `report`\n* `search`\n* `subscribe`\n* `trace`\n* `unlock`\n* `unsubscribe`\n\nFor a complete and up-to-date list, see the Express documentation for [`app.METHOD()`](http://expressjs.com/api.html#app.METHOD)\n\n#### Note about parameters:\nExpress allows for named parameters in your URIs, using the `:paramName` syntax. On systems where `:` is an illegal character, you can assign any substitute character using the `paramChar` option:\n\n```js\nlazyRest(app, db, {\n\tparamChar: '$'\n});\n```\n\nWith that option, `./api/endpoint/path/$pathId/get.js` will become `GET /api/endpoint/path/:pathId`.",
  "readmeFilename": "README.md",
  "gitHead": "634120bf729fc3177c82b7468e7c0cac2d84bdad",
  "_id": "lazy-rest@0.4.3",
  "_shasum": "fe36c066781597e69b26dce36354d7e08ea5f93f",
  "_from": "lazy-rest@>=0.4.3 <0.5.0"
}
